// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";
package edu.uci.ics.amber.engine.architecture.rpc;

import "edu/uci/ics/amber/engine/architecture/rpc/controlcommands.proto";
import "edu/uci/ics/amber/engine/architecture/rpc/controlreturns.proto";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE,
  preserve_unknown_fields: false
  no_default_values_in_constructor: true
};

// RPC Service
service WorkerService {
  rpc AddInputChannel(AddInputChannelRequest) returns (EmptyReturn);
  rpc AddPartitioning(AddPartitioningRequest) returns (EmptyReturn);
  rpc AssignPort(AssignPortRequest) returns (EmptyReturn);
  rpc FinalizeCheckpoint(FinalizeCheckpointRequest) returns (FinalizeCheckpointResponse);
  rpc FlushNetworkBuffer(EmptyRequest) returns (EmptyReturn);
  rpc InitializeExecutor(InitializeExecutorRequest) returns (EmptyReturn);
  rpc OpenExecutor(EmptyRequest) returns (EmptyReturn);
  rpc PauseWorker(EmptyRequest) returns (WorkerStateResponse);
  rpc PrepareCheckpoint(PrepareCheckpointRequest) returns (EmptyReturn);
  rpc QueryStatistics(EmptyRequest) returns (WorkerMetricsResponse);
  rpc ResumeWorker(EmptyRequest) returns (WorkerStateResponse);
  rpc RetrieveState(EmptyRequest) returns (EmptyReturn);
  rpc RetryCurrentTuple(EmptyRequest) returns (EmptyReturn);
  rpc StartWorker(EmptyRequest) returns (WorkerStateResponse);
  rpc EndWorker(EmptyRequest) returns (EmptyReturn);
  rpc StartChannel(EmptyRequest) returns (EmptyReturn);
  rpc EndChannel(EmptyRequest) returns (EmptyReturn);
  rpc DebugCommand(DebugCommandRequest) returns (EmptyReturn);
  rpc EvaluatePythonExpression(EvaluatePythonExpressionRequest) returns (EvaluatedValue);
  rpc NoOperation(EmptyRequest) returns (EmptyReturn);
}