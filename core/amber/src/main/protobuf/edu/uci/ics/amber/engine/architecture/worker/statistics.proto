// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

syntax = "proto3";

package edu.uci.ics.amber.engine.architecture.worker;

import "edu/uci/ics/amber/core/workflow.proto";
import "scalapb/scalapb.proto";

option (scalapb.options) = {
  scope: FILE,
  preserve_unknown_fields: false
  no_default_values_in_constructor: true

};

enum WorkerState {
  UNINITIALIZED = 0;
  READY = 1;
  RUNNING = 2;
  PAUSED = 3;
  COMPLETED = 4;
  TERMINATED = 5;

}

message PortTupleMetricsMapping {
  core.PortIdentity port_id = 1 [(scalapb.field).no_box = true];
  TupleMetrics tuple_metrics = 2 [(scalapb.field).no_box = true];
}

message TupleMetrics {
  int64 count = 1;
  int64 size = 2;
}

message WorkerStatistics {
  repeated PortTupleMetricsMapping input_tuple_metrics = 1;
  repeated PortTupleMetricsMapping output_tuple_metrics = 2;
  int64 data_processing_time = 3;
  int64 control_processing_time = 4;
  int64 idle_time = 5;
}

message WorkerMetrics {
  WorkerState worker_state = 1 [(scalapb.field).no_box = true];
  WorkerStatistics worker_statistics = 2 [(scalapb.field).no_box = true];
}